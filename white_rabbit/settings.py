"""
Django settings for white_rabbit project.

Generated by 'django-admin startproject' using Django 3.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

from pathlib import Path

import getconf
import os

BASE_DIR = Path(__file__).resolve().parent.parent


IS_LOCAL_DEV = bool(os.environ.get("TELESCOOP_DEV"))

if IS_LOCAL_DEV:
    config_paths = ["local_settings.conf"]
else:
    config_paths = [os.environ["CONFIG_PATH"]]
config = getconf.ConfigGetter(
    "myproj",
    config_paths,
)

DEBUG = IS_LOCAL_DEV

if IS_LOCAL_DEV:
    # SECURITY WARNING: keep the secret key used in production secret!
    SECRET_KEY = "9cang=0bgw9jfnroblq6rv%7kk$s-6*%^7t^(e08nrqj-dj@#6"
    ALLOWED_HOSTS = []
    # SILKY_PYTHON_PROFILER=True
else:
    SECRET_KEY = config.getstr("security.secret_key")
    ALLOWED_HOSTS = config.getlist("security.allowed_hosts")

CACHES = {
    "default": {
        "BACKEND": "django.core.cache.backends.filebased.FileBasedCache",
        "LOCATION": BASE_DIR / "cache_file",  # A unique identifier for the cache
    }
}
if IS_LOCAL_DEV:
    DEFAULT_CACHE_DURATION = 60 * 60 * 24
else:
    DEFAULT_CACHE_DURATION = 660  # in seconds, so 11 minutes

# Application definition
INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "white_rabbit",
    "debug_toolbar",
    "hijack",  # django-hijack
    "hijack.contrib.admin",
    # 'silk'
    "tailwind",
    "tailwind_theme",
]

MIDDLEWARE = [
    "debug_toolbar.middleware.DebugToolbarMiddleware",
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "rollbar.contrib.django.middleware.RollbarNotifierMiddleware",
    "white_rabbit.middleware.only_logged_in_users",
    # 'silk.middleware.SilkyMiddleware'
]

ROOT_URLCONF = "white_rabbit.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "white_rabbit.wsgi.application"

# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}

# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = "fr-fr"

TIME_ZONE = "UTC"

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = "/static/"
if IS_LOCAL_DEV:
    STATIC_ROOT = os.path.join(BASE_DIR, "static")
else:
    STATIC_ROOT = config.getstr("staticfiles.static_root")

# EMAIL
EMAIL_BACKEND = "django.core.mail.backends.console.EmailBackend"

if not IS_LOCAL_DEV:
    ROLLBAR = {
        "access_token": config.getstr("bugs.rollbar_access_token"),
        "environment": (
            "development"
            if DEBUG
            else config.getstr("environment.environment", "production")
        ),
        "root": BASE_DIR,
    }
    import rollbar

    rollbar.init(**ROLLBAR)

    ANYMAIL = {
        "MAILGUN_API_KEY": config.getstr("mail.api_key"),
        "MAILGUN_SENDER_DOMAIN": "mail.telescoop.fr",
        "MAILGUN_API_URL": "https://api.eu.mailgun.net/v3",
    }
    EMAIL_BACKEND = "anymail.backends.mailgun.EmailBackend"
    DEFAULT_FROM_EMAIL = "no-reply@telescoop.fr"
    SERVER_EMAIL = "no-reply@telescoop.fr"

DEFAULT_AUTO_FIELD = "django.db.models.AutoField"

LOGIN_REDIRECT_URL = "/"

# for django debug toolbar
INTERNAL_IPS = ["127.0.0.1"]

# djang-hijack
HIJACK_ALLOW_GET_REQUESTS = True
HIJACK_DISPLAY_ADMIN_BUTTON = False

TAILWIND_APP_NAME = "tailwind_theme"
